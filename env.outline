# Copy this file to .env, remove this comment and change the keys. For development
# with docker this should mostly work out of the box other than setting the Slack
# keys (for auth) and the SECRET_KEY.
#
# Please use `openssl rand -hex 32` to create SECRET_KEY
SECRET_KEY=332d0a63b4f2498436758ead23f9aeedc69e85bf783e0a80dcc7679181e32c57
UTILS_SECRET=aecab10d74152f3c4d1e63a6344d4f8469baaec5bdd034954f93cb35a87824ec


# Must point to the publicly accessible URL for the installation
URL=http://127.0.0.1:8888
PORT=3000

# Optional. If using a Cloudfront distribution or similar the origin server
# should be set to the same as URL.
CDN_URL=http://127.0.0.1:8888

# enforce (auto redirect to) https in production, (optional) default is true.
# set to false if your SSL is terminated at a loadbalancer, for example
FORCE_HTTPS=false

ENABLE_UPDATES=true
DEBUG=cache,presenters,events,emails,mailer,utils,multiplayer,server,services

# Third party signin credentials (at least one is required)

# To configure Google auth, you'll need to create an OAuth Client ID at
# => https://console.cloud.google.com/apis/credentials
#
# When configuring the Client ID, add an Authorized redirect URI:
# https://<your Outline URL>/auth/google.callback
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# Comma separated list of domains to be allowed (optional)
# If not set, all Google apps domains are allowed by default
GOOGLE_ALLOWED_DOMAINS=

# Third party credentials (optional)
SLACK_VERIFICATION_TOKEN=
SLACK_MESSAGE_ACTIONS=false
GOOGLE_ANALYTICS_ID=
SENTRY_DSN=

# AWS credentials (optional in development)
AWS_ACCESS_KEY_ID=2c0a0c6243cf9d32
AWS_SECRET_ACCESS_KEY=271afa5b4d56019d0ad875c529ed6a8660053d3ad04725f1c15cb22f749da72a
AWS_REGION=xx-xxxx-x
AWS_S3_UPLOAD_BUCKET_URL=http://127.0.0.1:8888
AWS_S3_UPLOAD_MAX_SIZE=26214400
AWS_S3_FORCE_PATH_STYLE=true
# uploaded s3 objects permission level, default is private
# set to "public-read" to allow public access
AWS_S3_ACL=private

# Emails configuration (optional)
SMTP_HOST=
SMTP_PORT=
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=
SMTP_REPLY_EMAIL=

# Custom logo that displays on the authentication screen, scaled to height: 60px
# TEAM_LOGO=https://example.com/images/logo.png

# See translate.getoutline.com for a list of available language codes and their
# percentage translated.
DEFAULT_LANGUAGE=en_US

# Specify what storage system to use. Possible value is one of "s3" or "local".
# For "local", the avatar images and document attachments will be saved on local disk. 
FILE_STORAGE=local

# If "local" is configured for FILE_STORAGE above, then this sets the parent directory under
# which all attachments/images go. Make sure that the process has permissions to create
# this path and also to write files to it.
FILE_STORAGE_LOCAL_ROOT_DIR=/var/lib/outline/data

# Maximum allowed size for the uploaded attachment.
FILE_STORAGE_UPLOAD_MAX_SIZE=26214400

# Disable SSL for connecting to Postgres
PGSSLMODE=disable
ALLOWED_DOMAINS=localhost
